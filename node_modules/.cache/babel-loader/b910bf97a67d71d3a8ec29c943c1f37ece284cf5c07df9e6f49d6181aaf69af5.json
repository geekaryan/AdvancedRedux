{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sudoa\\\\OneDrive\\\\Documents\\\\codes\\\\reactjs\\\\Udemy\\\\section 19\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { sendCartData, fetchCartData } from \"./store/cart-actions\";\nimport Notification from \"./components/UI/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n  useEffect(() => {\n    //we have to add .json while using the firebase actually..\n    // const sendCartData = async () => {\n    // dispatch(\n    //   uiActions.showNotification({\n    //     status: \"pending\",\n    //     title: \"Sending..\",\n    //     message: \"Sending cart data!\",\n    //   })\n    // );\n    // const response = await fetch(\n    //   \"https://booklist-43407-default-rtdb.firebaseio.com/cart.json\",\n    //   {\n    //     method: \"PUT\",\n    //     body: JSON.stringify(cart),\n    //   }\n    // );\n    // if (!response.ok) {\n    //   throw new Error(\"Sending cart data failed.\");\n    // }\n    // const data = await response.json();\n    // dispatch(\n    //   uiActions.showNotification({\n    //     status: \"success\",\n    //     title: \"Success...\",\n    //     message: \"Sent cart data suceess!\",\n    //   })\n    // );\n    //   };\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    dispatch(sendCartData(cart));\n    //calling catch so that if we catch any error it will show likewise..\n    // sendCartData().catch((err) => {\n    // dispatch(\n    //   uiActions.showNotification({\n    //     status: \"error\",\n    //     title: \"Error!\",\n    //     message: \"Sending cart data failed!\",\n    //   })\n    //   // );\n    // });\n  }, [cart, dispatch]);\n  //we adding cart as dependecy which means we will sent request whenver our cart is changing....\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+0lLiRKB8WOzaKnbCMqO0rhbWxM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useEffect","useSelector","useDispatch","Cart","Layout","Products","sendCartData","fetchCartData","Notification","isInitial","App","dispatch","showCart","state","ui","cartIsVisible","cart","notification","status","title","message"],"sources":["C:/Users/sudoa/OneDrive/Documents/codes/reactjs/Udemy/section 19/src/App.js"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { sendCartData, fetchCartData } from \"./store/cart-actions\";\nimport Notification from \"./components/UI/Notification\";\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n  useEffect(() => {\n    //we have to add .json while using the firebase actually..\n    // const sendCartData = async () => {\n    // dispatch(\n    //   uiActions.showNotification({\n    //     status: \"pending\",\n    //     title: \"Sending..\",\n    //     message: \"Sending cart data!\",\n    //   })\n    // );\n    // const response = await fetch(\n    //   \"https://booklist-43407-default-rtdb.firebaseio.com/cart.json\",\n    //   {\n    //     method: \"PUT\",\n    //     body: JSON.stringify(cart),\n    //   }\n    // );\n    // if (!response.ok) {\n    //   throw new Error(\"Sending cart data failed.\");\n    // }\n    // const data = await response.json();\n    // dispatch(\n    //   uiActions.showNotification({\n    //     status: \"success\",\n    //     title: \"Success...\",\n    //     message: \"Sent cart data suceess!\",\n    //   })\n    // );\n    //   };\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    dispatch(sendCartData(cart));\n    //calling catch so that if we catch any error it will show likewise..\n    // sendCartData().catch((err) => {\n    // dispatch(\n    //   uiActions.showNotification({\n    //     status: \"error\",\n    //     title: \"Error!\",\n    //     message: \"Sending cart data failed!\",\n    //   })\n    //   // );\n    // });\n  }, [cart, dispatch]);\n  //we adding cart as dependecy which means we will sent request whenver our cart is changing....\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,YAAY,EAAEC,aAAa,QAAQ,sBAAsB;AAClE,OAAOC,YAAY,MAAM,8BAA8B;AAAC;AAExD,IAAIC,SAAS,GAAG,IAAI;AAEpB,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAC9B,MAAMU,QAAQ,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;EAC/D,MAAMC,IAAI,GAAGf,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACG,IAAI,CAAC;EAC/C,MAAMC,YAAY,GAAGhB,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,EAAE,CAACG,YAAY,CAAC;EAElEjB,SAAS,CAAC,MAAM;IACdW,QAAQ,CAACJ,aAAa,EAAE,CAAC;EAC3B,CAAC,EAAE,CAACI,QAAQ,CAAC,CAAC;EACdX,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAIS,SAAS,EAAE;MACbA,SAAS,GAAG,KAAK;MACjB;IACF;IAEAE,QAAQ,CAACL,YAAY,CAACU,IAAI,CAAC,CAAC;IAC5B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC,EAAE,CAACA,IAAI,EAAEL,QAAQ,CAAC,CAAC;EACpB;EACA,oBACE,QAAC,QAAQ;IAAA,WACNM,YAAY,iBACX,QAAC,YAAY;MACX,MAAM,EAAEA,YAAY,CAACC,MAAO;MAC5B,KAAK,EAAED,YAAY,CAACE,KAAM;MAC1B,OAAO,EAAEF,YAAY,CAACG;IAAQ;MAAA;MAAA;MAAA;IAAA,QAEjC,eACD,QAAC,MAAM;MAAA,WACJR,QAAQ,iBAAI,QAAC,IAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACrB,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEf;AAAC,GAvEQF,GAAG;EAAA,QACOR,WAAW,EACXD,WAAW,EACfA,WAAW,EACHA,WAAW;AAAA;AAAA,KAJzBS,GAAG;AAyEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}