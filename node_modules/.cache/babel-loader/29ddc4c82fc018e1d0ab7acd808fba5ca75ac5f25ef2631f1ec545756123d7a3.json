{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload; //actions what we are getting from the user..\n      //here we are checking whether the item is already existed or not  by using find.. method basically\n      //we are making array of items ..\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      //if the item is not already existed so basically what we are going to do we basically use the push method to add items in the array..\n      state.totalQuantity++;\n      if (!existingItem) {\n        //state to item we go then we use push providing the already existing and adding newItems values to it...\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        //if the item is already existing we are going to increment the quantity, and totalPrice is equal to existing item price + newItem price...\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      //we are expecting the item while removing so ya we put our payload equl to the id...\n      const id = action.payload;\n      state.totalQuantity--;\n      const existingItem = state.items.find(item => item.id === id);\n\n      //if the quantity of the item is equal to 1 then we have to remove the item entirely so we are goona use filter method...\n      //basically to remove something from the list we use filter method..\n      if (existingItem.quantity === 1) {\n        //so here we are bascially filtering out the item by simply calling that show only those items which are not equal to id..\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        //if the item is more than one then we simply goona decrement the quantity and the total Price is also gonna decrement by the original price of the item...\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\n\n//creating a action creater..\n\nconst sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending..\",\n      message: \"Sending cart data!\"\n    }));\n    const response = await fetch(\"https://booklist-43407-default-rtdb.firebaseio.com/cart.json\", {\n      method: \"PUT\",\n      body: JSON.stringify(cart)\n    });\n    if (!response.ok) {\n      throw new Error(\"Sending cart data failed.\");\n    }\n  };\n};\nexport default cartSlice.reducer;\nexport const cartActions = cartSlice.actions;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cart","dispatch","showNotification","status","message","response","fetch","method","body","JSON","stringify","ok","Error","reducer","cartActions","actions"],"sources":["C:/Users/sudoa/OneDrive/Documents/codes/reactjs/Udemy/section 19/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n  },\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload; //actions what we are getting from the user..\r\n      //here we are checking whether the item is already existed or not  by using find.. method basically\r\n      //we are making array of items ..\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      //if the item is not already existed so basically what we are going to do we basically use the push method to add items in the array..\r\n      state.totalQuantity++;\r\n      if (!existingItem) {\r\n        //state to item we go then we use push providing the already existing and adding newItems values to it...\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        //if the item is already existing we are going to increment the quantity, and totalPrice is equal to existing item price + newItem price...\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart(state, action) {\r\n      //we are expecting the item while removing so ya we put our payload equl to the id...\r\n      const id = action.payload;\r\n      state.totalQuantity--;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n\r\n      //if the quantity of the item is equal to 1 then we have to remove the item entirely so we are goona use filter method...\r\n      //basically to remove something from the list we use filter method..\r\n      if (existingItem.quantity === 1) {\r\n        //so here we are bascially filtering out the item by simply calling that show only those items which are not equal to id..\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        //if the item is more than one then we simply goona decrement the quantity and the total Price is also gonna decrement by the original price of the item...\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n//creating a action creater..\r\n\r\nconst sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: \"pending\",\r\n        title: \"Sending..\",\r\n        message: \"Sending cart data!\",\r\n      })\r\n    );\r\n    const response = await fetch(\r\n      \"https://booklist-43407-default-rtdb.firebaseio.com/cart.json\",\r\n      {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(cart),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Sending cart data failed.\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default cartSlice.reducer;\r\n\r\nexport const cartActions = cartSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACjB,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACH,aAAa,GAAGI,MAAM,CAACC,OAAO,CAACL,aAAa;MAClDG,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACC,OAAO,CAACN,KAAK;IACpC,CAAC;IACDO,aAAa,CAACH,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMG,OAAO,GAAGH,MAAM,CAACC,OAAO,CAAC,CAAC;MAChC;MACA;MACA,MAAMG,YAAY,GAAGL,KAAK,CAACJ,KAAK,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACvE;MACAR,KAAK,CAACH,aAAa,EAAE;MACrB,IAAI,CAACQ,YAAY,EAAE;QACjB;QACAL,KAAK,CAACJ,KAAK,CAACa,IAAI,CAAC;UACfD,EAAE,EAAEJ,OAAO,CAACI,EAAE;UACdE,KAAK,EAAEN,OAAO,CAACM,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAER,OAAO,CAACM,KAAK;UACzBhB,IAAI,EAAEU,OAAO,CAACS;QAChB,CAAC,CAAC;MACJ,CAAC,MAAM;QACL;QACAR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGR,OAAO,CAACM,KAAK;MACnE;IACF,CAAC;IACDI,kBAAkB,CAACd,KAAK,EAAEC,MAAM,EAAE;MAChC;MACA,MAAMO,EAAE,GAAGP,MAAM,CAACC,OAAO;MACzBF,KAAK,CAACH,aAAa,EAAE;MACrB,MAAMQ,YAAY,GAAGL,KAAK,CAACJ,KAAK,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;;MAE/D;MACA;MACA,IAAIH,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAE;QAC/B;QACAX,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACmB,MAAM,CAAER,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAM;QACL;QACAH,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACK,KAAK;MACxE;IACF;EACF;AACF,CAAC,CAAC;;AAEF;;AAEA,MAAMM,YAAY,GAAIC,IAAI,IAAK;EAC7B,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CACN1B,SAAS,CAAC2B,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBP,KAAK,EAAE,WAAW;MAClBQ,OAAO,EAAE;IACX,CAAC,CAAC,CACH;IACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,8DAA8D,EAC9D;MACEC,MAAM,EAAE,KAAK;MACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,IAAI;IAC3B,CAAC,CACF;IAED,IAAI,CAACK,QAAQ,CAACM,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C;EACF,CAAC;AACH,CAAC;AAED,eAAepC,SAAS,CAACqC,OAAO;AAEhC,OAAO,MAAMC,WAAW,GAAGtC,SAAS,CAACuC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}